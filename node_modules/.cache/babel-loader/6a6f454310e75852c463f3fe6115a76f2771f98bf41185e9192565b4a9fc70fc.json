{"ast":null,"code":"var _jsxFileName = \"/Users/wei/Documents/experiments/atomic-exec/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport defaultAudio from \"./default.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [transcription, setTranscription] = useState(\"\");\n  const [accuracy, setAccuracy] = useState(0);\n\n  // Calculate accuracy\n  const checkAccuracy = userTranscription => {\n    // Compare the user's transcription with the correct answer, calculate accuracy\n    // Here, we assume the correct answer is \"example transcription\" for demonstration purposes\n    const correctTranscription = \"example transcription\";\n    console.log(userTranscription);\n    const calculatedAccuracy = calculateAccuracy(userTranscription, correctTranscription);\n    console.log(calculatedAccuracy);\n    setAccuracy(calculatedAccuracy);\n  };\n  const calculateAccuracy = (userTranscription, correctTranscription) => {\n    const userWords = userTranscription.trim().split(\" \");\n    const correctWords = correctTranscription.trim().split(\" \");\n    const wordCount = correctWords.length;\n    let correctCount = 0;\n    for (let i = 0; i < wordCount; i++) {\n      if (userWords[i] && userWords[i] === correctWords[i]) {\n        correctCount++;\n      }\n    }\n    return correctCount / wordCount * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u807D\\u5BEB\\u7DB2\\u9801\\u61C9\\u7528\\u7A0B\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      src: defaultAudio,\n      type: \"audio/mpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcription,\n      onChange: e => setTranscription(e.target.value),\n      rows: 4,\n      cols: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => checkAccuracy(transcription),\n      children: \"\\u6AA2\\u67E5\\u6B63\\u78BA\\u7387\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6B63\\u78BA\\u7387: \", accuracy, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OEYUZbOCIcwLHk663SQzirK43fg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","defaultAudio","jsxDEV","_jsxDEV","App","_s","transcription","setTranscription","accuracy","setAccuracy","checkAccuracy","userTranscription","correctTranscription","console","log","calculatedAccuracy","calculateAccuracy","userWords","trim","split","correctWords","wordCount","length","correctCount","i","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","value","onChange","e","target","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/wei/Documents/experiments/atomic-exec/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport defaultAudio from \"./default.mp3\";\n\nconst App = () => {\n  const [transcription, setTranscription] = useState(\"\");\n  const [accuracy, setAccuracy] = useState(0);\n\n  // Calculate accuracy\n  const checkAccuracy = (userTranscription) => {\n    // Compare the user's transcription with the correct answer, calculate accuracy\n    // Here, we assume the correct answer is \"example transcription\" for demonstration purposes\n    const correctTranscription = \"example transcription\";\n    console.log(userTranscription);\n    const calculatedAccuracy = calculateAccuracy(\n      userTranscription,\n      correctTranscription\n    );\n    console.log(calculatedAccuracy);\n    setAccuracy(calculatedAccuracy);\n  };\n\n  const calculateAccuracy = (userTranscription, correctTranscription) => {\n    const userWords = userTranscription.trim().split(\" \");\n    const correctWords = correctTranscription.trim().split(\" \");\n    const wordCount = correctWords.length;\n    let correctCount = 0;\n\n    for (let i = 0; i < wordCount; i++) {\n      if (userWords[i] && userWords[i] === correctWords[i]) {\n        correctCount++;\n      }\n    }\n\n    return (correctCount / wordCount) * 100;\n  };\n\n  return (\n    <div>\n      <h1>聽寫網頁應用程式</h1>\n      <audio controls src={defaultAudio} type=\"audio/mpeg\" />\n      <textarea\n        value={transcription}\n        onChange={(e) => setTranscription(e.target.value)}\n        rows={4}\n        cols={50}\n      ></textarea>\n      <button onClick={() => checkAccuracy(transcription)}>檢查正確率</button>\n      <p>正確率: {accuracy}%</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMU,aAAa,GAAIC,iBAAiB,IAAK;IAC3C;IACA;IACA,MAAMC,oBAAoB,GAAG,uBAAuB;IACpDC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC;IAC9B,MAAMI,kBAAkB,GAAGC,iBAAiB,CAC1CL,iBAAiB,EACjBC,oBACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;IAC/BN,WAAW,CAACM,kBAAkB,CAAC;EACjC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACL,iBAAiB,EAAEC,oBAAoB,KAAK;IACrE,MAAMK,SAAS,GAAGN,iBAAiB,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACrD,MAAMC,YAAY,GAAGR,oBAAoB,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAC3D,MAAME,SAAS,GAAGD,YAAY,CAACE,MAAM;IACrC,IAAIC,YAAY,GAAG,CAAC;IAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,EAAEG,CAAC,EAAE,EAAE;MAClC,IAAIP,SAAS,CAACO,CAAC,CAAC,IAAIP,SAAS,CAACO,CAAC,CAAC,KAAKJ,YAAY,CAACI,CAAC,CAAC,EAAE;QACpDD,YAAY,EAAE;MAChB;IACF;IAEA,OAAQA,YAAY,GAAGF,SAAS,GAAI,GAAG;EACzC,CAAC;EAED,oBACElB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB1B,OAAA;MAAO2B,QAAQ;MAACC,GAAG,EAAE9B,YAAa;MAAC+B,IAAI,EAAC;IAAY;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD1B,OAAA;MACE8B,KAAK,EAAE3B,aAAc;MACrB4B,QAAQ,EAAGC,CAAC,IAAK5B,gBAAgB,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,IAAI,EAAE,CAAE;MACRC,IAAI,EAAE;IAAG;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACZ1B,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAM7B,aAAa,CAACJ,aAAa,CAAE;MAAAmB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnE1B,OAAA;MAAAsB,QAAA,GAAG,sBAAK,EAACjB,QAAQ,EAAC,GAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}